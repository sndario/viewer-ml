//
//  ItemDetailWorkerTests.swift
//  Viewer
//
//  Created by Dario Suarez on 30/06/2019.
//  Copyright (c) 2019 Dario Suarez. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

@testable import Viewer
import XCTest

class ItemDetailWorkerTests: XCTestCase {
    // MARK: Subject under test
    var networking: Networking!
    var sut: ItemDetailWorker!

    // MARK: Test lifecycle

    override func setUp() {
        super.setUp()
        setupItemDetailWorker()
    }

    override func tearDown() {
        super.tearDown()
        sut = nil
    }

    // MARK: Test setup

    func setupItemDetailWorker() {
        networking = Networking()
        sut = ItemDetailWorker(networking: networking)
    }

    // MARK: Tests

    func testGetSuccess() {
        //item_description_success
        // Given
        networking.session = NetworkingSessionMock.success(jsonResponse: "item_description_success")
        sut.itemDetail("test",
                       success: { (item) in
                        XCTAssertEqual(item!.plainText, "test description")
                        XCTAssert(item!.text.isEmpty)
        }) { (_) in
            XCTFail()
        }
    }
    
    func testGetSuccessEmpty() {
        //item_description_success
        // Given
        networking.session = NetworkingSessionMock.empty()
        sut.itemDetail("test",
                       success: { (item) in
                        XCTAssertNil(item)
        }) { (_) in
            XCTFail()
        }
    }
    
    func testGetFailure() {
        networking.session = NetworkingSessionMock.failureTimeoutError()
        sut.itemDetail("test",
                       success: { (item) in
                        XCTFail()
        }) { (error) in
            XCTAssertEqual(error.code, URLError.timedOut.rawValue)
        }
    }
}
