//
//  ItemDetailPresenterTests.swift
//  Viewer
//
//  Created by Dario Suarez on 30/06/2019.
//  Copyright (c) 2019 Dario Suarez. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

@testable import Viewer
import XCTest

class ItemDetailPresenterTests: XCTestCase {
    // MARK: Subject under test

    var sut: ItemDetailPresenter!

    // MARK: Test lifecycle

    override func setUp() {
        super.setUp()
        setupItemDetailPresenter()
    }

    override func tearDown() {
        super.tearDown()
        sut = nil
    }

    // MARK: Test setup

    func setupItemDetailPresenter() {
        sut = ItemDetailPresenter()
    }

    // MARK: Test doubles

    class ItemDetailDisplayLogicSpy: ItemDetailDisplayLogic {
        private(set) var displayItemCalled = false
        func displayItem(viewModel: ItemDetail.Load.ViewModel) {
            displayItemCalled = true
        }
    }

    // MARK: Tests
    func testPresentItemDetail() {
        // Given
        let spy = ItemDetailDisplayLogicSpy()
        sut.viewController = spy
        let response = ItemDetail.Load.Response(item: ObjectMock.searchResultItem,
                                                desc: ObjectMock.itemDescription)

        // When
        sut.presentItem(response: response)

        // Then
        XCTAssertTrue(spy.displayItemCalled, "")
    }
}
