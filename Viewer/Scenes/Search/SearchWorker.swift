//
//  SearchWorker.swift
//  Viewer
//
//  Created by Dario Suarez on 13/06/2019.
//  Copyright (c) 2019 Dario Suarez. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol SearchWorkerProtocol {
    func search(_ str: String,
                success: @escaping (SearchResult?) -> Void,
                failure: @escaping (ViewerError) -> Void)
}
class SearchWorker: SearchWorkerProtocol {
    
    private var networking: Networking!
    
    init(networking: Networking) {
        self.networking = networking
    }
    
    func search(_ str: String,
                success: @escaping (SearchResult?) -> Void,
                failure: @escaping (ViewerError) -> Void) {
        let request = SearchService.getSearch(query: str).urlRequest
        networking.call(urlRequest: request,
                        decodingType: SearchResult.self) { (result) in
                            switch result {
                            case .empty:
                                success(nil)
                            case .success(let obj):
                                success(obj)
                            case .failure(let err):
                                failure(err)
                            }
        }
    }
}
